{
    "rules": {
        /**
         * @description: eslint stylistic typescript rules
         * @see https://eslint.style/packages/ts#rules
         * @version 2.9.0
         */

        "@stylistic/js/block-spacing": "off", // EXTENDED
        "@stylistic/ts/block-spacing": "warn",

        "@stylistic/js/brace-style": "off", // EXTENDED
        "@stylistic/ts/brace-style": "warn",

        "@stylistic/js/comma-dangle": "off", // EXTENDED
        "@stylistic/ts/comma-dangle": [
            "warn",
            {
                "arrays": "always-multiline",
                "objects": "always-multiline",
                "imports": "always-multiline",
                "exports": "always-multiline",
                "functions": "always-multiline",
                "enums": "always-multiline",
                "generics": "always-multiline",
                "tuples": "always-multiline"
            }
        ],

        "@stylistic/js/comma-spacing": "off", // EXTENDED
        "@stylistic/ts/comma-spacing": "warn",

        "@stylistic/js/function-call-spacing": "off", // EXTENDED
        "@stylistic/ts/function-call-spacing": "warn",

        "@stylistic/js/indent": "off", // EXTENDED
        "@stylistic/ts/indent": ["warn", 4],

        "@stylistic/js/key-spacing": "off", // EXTENDED
        "@stylistic/ts/key-spacing": "warn",

        "@stylistic/js/keyword-spacing": "off", // EXTENDED
        "@stylistic/ts/keyword-spacing": "warn",

        "@stylistic/js/lines-around-comment": "off", // EXTENDED
        "@stylistic/ts/lines-around-comment": [
            "warn",
            {
                "allowBlockStart": true,
                "allowEnumStart": true,
                "allowInterfaceStart": true,
                "allowTypeStart": true
            }
        ],

        "@stylistic/js/lines-between-class-members": "off", // EXTENDED
        "@stylistic/ts/lines-between-class-members": [ "warn", "always", { "exceptAfterSingleLine": true } ],

        "@stylistic/js/member-delimiter-style": "off", // EXTENDED
        "@stylistic/ts/member-delimiter-style": "warn",

        "@stylistic/js/no-extra-parens": "off", // EXTENDED
        "@stylistic/ts/no-extra-parens": [
            "warn",
            "all",
            {
                "ignoreJSX": "all",
                "nestedBinaryExpressions": false,
                "enforceForArrowConditionals": false
            }
        ],

        "@stylistic/js/no-extra-semi": "off", // EXTENDED
        "@stylistic/ts/no-extra-semi": "warn",

        "@stylistic/js/object-curly-newline": "off", // EXTENDED
        "@stylistic/ts/object-curly-newline": [
            "warn",
            {
                "ObjectExpression": {"multiline": true, "consistent": true },
                "ObjectPattern": {"multiline": true, "consistent": true },
                "ImportDeclaration": {"multiline": true, "consistent": true },
                "ExportDeclaration": {"multiline": true, "consistent": true }
            }
        ],

        "@stylistic/js/object-curly-spacing": "off", // EXTENDED
        "@stylistic/ts/object-curly-spacing": ["warn", "always"],

        "@stylistic/js/object-property-newline": "off", // EXTENDED
        "@stylistic/ts/object-property-newline": [
            "warn",
            {
                "allowAllPropertiesOnSameLine": true
            }
        ],

        "@stylistic/js/padding-line-between-statements": "off", // EXTENDED
        "@stylistic/ts/padding-line-between-statements": [
            "warn",
            {
                "blankLine": "always",
                "prev": [ "class", "function", "interface" ],
                "next": "*"
            }
        ],

        "@stylistic/js/quote-props": "off", // EXTENDED
        "@stylistic/ts/quote-props": [
            "warn",
            "consistent-as-needed"
        ],

        "@stylistic/js/quotes": "off", // EXTENDED
        "@stylistic/ts/quotes": [
            "warn",
            "single"
        ],


        "@stylistic/js/semi": "off", // EXTENDED
        "@stylistic/ts/semi": "warn",


        "@stylistic/js/space-before-blocks": "off", // EXTENDED
        "@stylistic/ts/space-before-blocks": "warn",

        "@stylistic/js/space-before-function-paren": "off", // EXTENDED
        "@stylistic/ts/space-before-function-paren": [
            "warn",
            {
                "anonymous": "never",
                "named": "never",
                "asyncArrow": "always"
            }
        ],

        "@stylistic/js/space-infix-ops": "off", // EXTENDED
        "@stylistic/ts/space-infix-ops": "warn",

        "@stylistic/js/type-annotation-spacing": "off", // EXTENDED
        "@stylistic/ts/type-annotation-spacing": "warn",


        /**
         * last
         * @description: dummy rule, to avoid dealing with trailing commas above
         */
        "": "off"
    }
}
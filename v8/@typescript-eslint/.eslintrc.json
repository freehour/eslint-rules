{
    "rules": {
        /**
         * @description: rules for typescript
         * @see: https://typescript-eslint.io/rules/#supported-rules
         * @version 8.8.1
         */

        "@typescript-eslint/adjacent-overload-signatures": "warn",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-indexed-object-style": "warn",
        "@typescript-eslint/consistent-type-assertions": "warn",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/consistent-type-exports": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true
            }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
            "warn",
            {
                "accessibility": "no-public"
            }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/method-signature-style": "warn",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-array-delete": "error",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        "@typescript-eslint/no-confusing-void-expression": [
            "warn",
            {
                "ignoreArrowShorthand": true
            }
        ],
        "@typescript-eslint/no-deprecated": "error",
        "@typescript-eslint/no-duplicate-enum-values": "warn",
        "@typescript-eslint/no-duplicate-type-constituents": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",

        "@typescript-eslint/no-empty-object-type": [
            "warn",
            {
                "allowInterfaces": "always"
            }
        ],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extraneous-class": "warn",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-import-type-side-effects": "warn",
        "@typescript-eslint/no-inferrable-types": "warn",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
            "error",
            {
                "checksVoidReturn": {
                    "attributes": false
                }
            }
        ],
        "@typescript-eslint/no-mixed-enums": "warn",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-redundant-type-constituents": "warn",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-restricted-types": "off",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-qualifier": "warn",
        "@typescript-eslint/no-unnecessary-template-expression": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-declaration-merging": "error",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/no-unsafe-function-type": "warn",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-unary-minus": "error",
        "@typescript-eslint/no-useless-empty-export": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/no-wrapper-object-types": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/parameter-properties": [
            "warn",
            {
                "prefer": "class-property"
            }
        ],
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-enum-initializers": "warn",
        "@typescript-eslint/prefer-find": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "off",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-regexp-exec": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/promise-function-async": "warn",
        "@typescript-eslint/require-array-sort-compare": "warn",
        "@typescript-eslint/restrict-plus-operands": "off",
        "@typescript-eslint/restrict-template-expressions": "off",
        "@typescript-eslint/strict-boolean-expressions": "warn",
        "@typescript-eslint/switch-exhaustiveness-check": "warn",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/typedef": "off",
        "@typescript-eslint/unbound-method": [
            "error",
            {
                "ignoreStatic": true
            }
        ],
        "@typescript-eslint/unified-signatures": "warn",
        "@typescript-eslint/use-unknown-in-catch-callback-variable": "off",


        /**
         * @description: rules for typescript as extensions of existing eslint rules
         * @see: https://typescript-eslint.io/rules/#extension-rules
         * @version 8.8.1
         */

        "class-methods-use-this": "off", // EXTENDED
        "@typescript-eslint/class-methods-use-this": "off",

        "consistent-return": "off", // EXTENDED
        "@typescript-eslint/consistent-return": "off",


        "default-param-last": "off", // EXTENDED
        "@typescript-eslint/default-param-last": "error",

        "dot-notation": "off", // EXTENDED
        "@typescript-eslint/dot-notation": [
            "error",
            {
                "allowIndexSignaturePropertyAccess": true
            }
        ],

        "init-declarations": "off", // EXTENDED
        "@typescript-eslint/init-declarations": "error",

        "max-params": "off", // EXTENDED
        "@typescript-eslint/max-params": "off",

        "no-array-constructor": "off", // EXTENDED
        "@typescript-eslint/no-array-constructor": "error",

        "no-dupe-class-members": "off", // EXTENDED
        "@typescript-eslint/no-dupe-class-members": "warn",

        "no-empty-function": "off", // EXTENDED
        "@typescript-eslint/no-empty-function": "off",

        "no-implied-eval": "off", // EXTENDED
        "@typescript-eslint/no-implied-eval": "error",

        "no-invalid-this": "off", // EXTENDED
        "@typescript-eslint/no-invalid-this": "warn",

        "no-loop-func": "off", // EXTENDED
        "@typescript-eslint/no-loop-func": "warn",

        "no-loss-of-precision": "off", // EXTENDED
        "@typescript-eslint/no-loss-of-precision": "error",

        "no-magic-numbers": "off", // EXTENDED
        "@typescript-eslint/no-magic-numbers": "off",

        "no-redeclare": "off", // EXTENDED
        "@typescript-eslint/no-redeclare": [
            "warn",
            {
                "builtinGlobals": false
            }
        ],

        "no-restricted-imports": "off", // EXTENDED
        "@typescript-eslint/no-restricted-imports": "off",

        "no-shadow": "off", // EXTENDED
        "@typescript-eslint/no-shadow": "off",

        "no-unused-expressions": "off", // EXTENDED
        "@typescript-eslint/no-unused-expressions": "warn",

        "no-unused-vars": "off", // EXTENDED
        "@typescript-eslint/no-unused-vars": [
            "warn",
            {
                "args": "none"
            }
        ],

        "no-use-before-define": "off", // EXTENDED
        "@typescript-eslint/no-use-before-define":  [
            "warn",
            {
                "functions": false,
                "classes": false,
                "variables": true,
                "allowNamedExports": false,
                "enums": true,
                "typedefs": true,
                "ignoreTypeReferences": false
            }
        ],

        "no-useless-constructor": "off", // EXTENDED
        "@typescript-eslint/no-useless-constructor": "warn",

        "no-throw-literal": "off", // EXTENDED
        "@typescript-eslint/only-throw-error": "error",

        "prefer-destructuring": "off", // EXTENDED
        "@typescript-eslint/prefer-destructuring": "warn",


        "prefer-promise-reject-errors": "off", // EXTENDED
        "@typescript-eslint/prefer-promise-reject-errors": "warn",


        "require-await": "off", // EXTENDED
        "@typescript-eslint/require-await": "off",

        "no-return-await": "off", // EXTENDED
        "@typescript-eslint/return-await": "error",

        /**
         * last
         * @description: dummy rule, to avoid dealing with trailing commas above
         */
        "": "off"
    }
}